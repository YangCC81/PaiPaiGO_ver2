@model PaiPaiGO.Models.Opinion


<!--評分的樣式-->
<style>
	.rating {
		font-size: 24px; /* 評分星星的大小 */
	}

		.rating i {
			cursor: pointer; /* 讓鼠標顯示為手指 */
		}

	.rated {
		color: #ffc107; /* 選中的星星及其右側星星的顏色（黃色） */
	}
</style>

<!--評分第四版的按鈕的樣式-->
<style>
	.btn-checkbox {
		display: inline-block;
		background-color: #ccc;
		color: #000;
		border: 1px solid #ccc;
		padding: 5px 10px;
		margin: 5px;
		cursor: pointer;
		border-radius: 20px;
	}

		.btn-checkbox.selected {
			background-color: #000;
			color: #fff;
			border: 1px solid #000;
		}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
		integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
		crossorigin="anonymous"></script>


<div class="container">





	<!-- 評分 -->
	<div class="mb-3">
		<!-- <label for="rating" class="form-label">評分</label> -->
		<div class="rating" id="ratingStars">
			<i class="fas fa-star" data-rating="1"></i>
			<i class="fas fa-star" data-rating="2"></i>
			<i class="fas fa-star" data-rating="3"></i>
			<i class="fas fa-star" data-rating="4"></i>
			<i class="fas fa-star" data-rating="5"></i>
		</div>
		<input type="hidden" id="rating" name="rating">
	</div>



	<!-- 評論 -->
	<div class="mb-3">
		<h3>評論</h3>
		<!-- class="btn-group" role="group" aria-label="Basic example"-->
		<div>
			<div class="btn-checkbox" onclick="toggleColor(this)">选项1</div>
			<div class="btn-checkbox" onclick="toggleColor(this)">选项2</div>
			<div class="btn-checkbox" onclick="toggleColor(this)">选项3</div>
			<div class="btn-checkbox" onclick="toggleColor(this)">选项4</div>
		</div>
		<p>您选择的选项是：<span id="selected-options"></span></p>



		<form asp-action="Yu_Star">
			@*<input type="hidden" asp-for="MissionId" name="MissionId" value="" />*@
			<input id="Score_" name="Score" value="" class="form-control" />
			<input id="Content_" name="Content" value="" class="form-control" />
			<input name="MissionId" value="@ViewData["MissionId"]" class="form-control" />
			<input name="ReportMemberId" value="@ViewData["MemberId"]" class="form-control" />
			<input name="State" value="未處理" class="form-control" />
			<input name="Date" value="@ViewData["Date"]" class="form-control" />
			<input name="ReportedMemberId" value="@ViewData["OthersId"]" class="form-control" />
			<input name="Type" value="意見" class="form-control" />
			<input name="Ratingnumber" value="04" class="form-control" />


			@*<input asp-for="State" />*@

			<input type="submit" value="提交" class="btn btn-primary" />
		</form>

	</div>
</div>

<div>
	<!-- <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>-->
	<a asp-action="Calendar" class="btn btn-primary">完成任務</a>
	@*<button type="button" class="btn btn-primary">不進行評分</button>*@
	@*<button type="button" class="btn btn-primary">完成</button>*@
</div>

<!--評分的JS-->
<script>


	//JavaScript 代碼
	const ratingStars = document.querySelectorAll(".rating i");
	const ratingInput = document.getElementById("rating");
	let selectedRating = null; // 添加一个用于存储用户选择的评分的变量

	ratingStars.forEach(star => {
		star.addEventListener("click", () => {
			const ratingValue = parseInt(star.getAttribute("data-rating"));
			selectedRating = ratingValue; // 将用户选择的评分值存储在selectedRating变量中
			ratingInput.value = ratingValue;
			resetRating();
			star.classList.add("rated");
			// 同時讓左側星星恢復原色
			let prevStars = star.previousElementSibling;
			while (prevStars) {
				prevStars.classList.add("rated");
				prevStars = prevStars.previousElementSibling;
			}
			document.getElementById("Score_").value = selectedRating


		});
	});

	function resetRating() {
		ratingStars.forEach(star => {
			star.classList.remove("rated");
		});
	}


	//function submitForm() {
	//	const selectedOptions = document.getElementById("selected-options").innerText; // 获取选项值（如果需要）
	//	const selectedRating = ratingInput.value; // 获取用户选择的评分值

	//	// 创建一个包含要发送的数据的对象
	//	const data = {
	//		rating: selectedRating,
	//		options: selectedOptions // 如果需要，你可以将选项一并发送
	//	};

	//	// 发送AJAX请求
	//	const xhr = new XMLHttpRequest();
	//	xhr.open("POST", "/your-controller-url"); // 替换为你的控制器的URL
	//	xhr.setRequestHeader("Content-Type", "application/json");
	//	xhr.onreadystatechange = function () {
	//		if (xhr.readyState === 4 && xhr.status === 200) {
	//			// 请求成功，可以执行其他操作
	//			console.log("Data sent successfully.");
	//		}
	//	};

	//	// 将数据对象转换为JSON字符串并发送
	//	xhr.send(JSON.stringify(data));
	//}




	//第四版
	function toggleColor(button) {
		button.classList.toggle("selected");

		var selectedOptions = document.querySelectorAll(".btn-checkbox.selected");
		var selectedOptionsDisplay = document.getElementById("selected-options");
		var selectedOptionText = Array.from(selectedOptions).map(function (option) {
			return option.textContent;
		}).join(', ');

		document.getElementById("Content_").value = selectedOptionText;
	}

	function submitForm() {
		var selectedOptions = document.querySelectorAll(".btn-checkbox.selected");
		var selectedOptionsText = Array.from(selectedOptions).map(function (option) {
			return option.textContent;
		}).join(', ');

		// 这里可以添加提交表单的逻辑
		//alert("表单已提交，选择的选项是: " + selectedOptionsText);

	}
</script>
